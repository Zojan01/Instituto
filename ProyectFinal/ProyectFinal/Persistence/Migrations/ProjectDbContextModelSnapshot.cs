// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence;

namespace Persistence.Migrations
{
    [DbContext(typeof(ProjectDbContext))]
    partial class ProjectDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Model.Cursos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CursoGrado");

                    b.Property<string>("CursoNombre");

                    b.HasKey("Id");

                    b.ToTable("Curso");
                });

            modelBuilder.Entity("Model.EstudianteCurso", b =>
                {
                    b.Property<int>("IdCurso");

                    b.Property<int>("IdEstudiante");

                    b.HasKey("IdCurso", "IdEstudiante");

                    b.HasIndex("IdEstudiante");

                    b.ToTable("EstudianteCursos");
                });

            modelBuilder.Entity("Model.EstudiantePariente", b =>
                {
                    b.Property<int>("IdEstudiante");

                    b.Property<string>("IdPariente");

                    b.Property<string>("IdParientes");

                    b.Property<string>("TipoRelacion");

                    b.HasKey("IdEstudiante", "IdPariente");

                    b.HasIndex("IdParientes");

                    b.ToTable("EstudianteParientes");
                });

            modelBuilder.Entity("Model.Estudiantes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido");

                    b.Property<int>("Edad");

                    b.Property<string>("Enfermedad");

                    b.Property<string>("Nombre");

                    b.Property<string>("Sexo");

                    b.HasKey("Id");

                    b.ToTable("Estudiantes");
                });

            modelBuilder.Entity("Model.Parientes", b =>
                {
                    b.Property<string>("Cedula")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Apellido");

                    b.Property<string>("Direccion");

                    b.Property<string>("Nombre");

                    b.Property<string>("Telefono");

                    b.HasKey("Cedula");

                    b.ToTable("Parientes");
                });

            modelBuilder.Entity("Model.ProfesorCurso", b =>
                {
                    b.Property<int>("IdCurso");

                    b.Property<string>("IdProfesor");

                    b.HasKey("IdCurso", "IdProfesor");

                    b.HasIndex("IdProfesor");

                    b.ToTable("ProfesorCursos");
                });

            modelBuilder.Entity("Model.Profesores", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Apellido");

                    b.Property<string>("Direccion");

                    b.Property<string>("Materia");

                    b.Property<string>("Nombre");

                    b.Property<string>("Telefono");

                    b.HasKey("Id");

                    b.ToTable("Profesores");
                });

            modelBuilder.Entity("Model.EstudianteCurso", b =>
                {
                    b.HasOne("Model.Cursos", "Curso")
                        .WithMany("EstudianteCursos")
                        .HasForeignKey("IdCurso")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Model.Estudiantes", "Estudiante")
                        .WithMany("EstudianteCursos")
                        .HasForeignKey("IdEstudiante")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Model.EstudiantePariente", b =>
                {
                    b.HasOne("Model.Estudiantes", "Estudiantes")
                        .WithMany("EstudianteParientes")
                        .HasForeignKey("IdEstudiante")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Model.Parientes", "Parientes")
                        .WithMany("EstudianteParientes")
                        .HasForeignKey("IdParientes");
                });

            modelBuilder.Entity("Model.ProfesorCurso", b =>
                {
                    b.HasOne("Model.Cursos", "Cursos")
                        .WithMany("ProfesorCurso")
                        .HasForeignKey("IdCurso")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Model.Profesores", "Profesores")
                        .WithMany("ProfesorCurso")
                        .HasForeignKey("IdProfesor")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
